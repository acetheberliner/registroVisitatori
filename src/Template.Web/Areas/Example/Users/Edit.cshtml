@model Template.Web.Areas.Example.Users.EditViewModel
@{
    Layout = "../../../Views/Shared/_Layout.cshtml";

    if (Model.Id != null)
    {
        ViewData["Title"] = Model.Email;
    }
    else
    {
        ViewData["Title"] = "Inserimento nuovo utente";
    }
}

@section pageTitle {
    <nav class="navbar navbar-expand navbar-light flex-wrap mb-3 justify-content-center">
        <div class="navbar-brand fw-semibold fs-4">
            @ViewData["Title"]
        </div>

        @if (Model.Id != null)
        {
            <div class="dropdown">
                <button class="btn btn-light ms-2" type="button" id="dropdownMenuAltreAzioni" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false" title="Altre azioni">
                    <i class="fa-solid fa-ellipsis-vertical"></i>
                </button>

                <div class="dropdown-menu dropdown-menu-end" aria-labelledby="dropdownMenuAltreAzioni">
                    <button class="dropdown-item text-danger" type="button" onclick="document.getElementById('delete-form').submit();">
                        <i class="fa-solid fa-trash"></i> Elimina
                    </button>
                    <form hidden autocomplete="off" id="delete-form" method="post" action="@Url.Action(MVC.Example.Users.Delete())">
                        <input type="hidden" asp-for="Id" />
                    </form>
                </div>
            </div>
        }
    </nav>
}

@section styles {
    <style>
        .navbar-brand {
            padding: 0.5rem 0.8rem;
        }

        .navbar-expand {
            justify-content: space-between;
            padding: 0px 1rem;
        }

        .form-card {
            background: #fff;
            border: 1px solid #dee2e6;
            border-radius: 12px;
            padding: 2rem;
            box-shadow: 0 6px 20px rgba(0, 0, 0, 0.05);
        }

            .form-card legend {
                font-size: 1.25rem;
                font-weight: 600;
                border: none;
                margin-bottom: 0.5rem;
            }

        label {
            font-weight: 500;
        }

        input.form-control {
            border-radius: 8px;
            font-size: 0.95rem;
        }

        .text-danger {
            font-size: 0.85rem;
        }

        .btn-success {
            font-weight: 500;
        }

        .sticky-top {
            background-color: #fff;
            z-index: 1;
        }
    </style>
}

<div class="container-lg py-3">
    <div class="row justify-content-center">
        <div class="col-12 col-lg-10 col-xl-8">
            <div class="form-card shadow-lg">
                <form autocomplete="off" method="post" class="onit-form-sm" action="@Url.Action(MVC.Example.Users.Edit())" id="edit-form">
                    <input id="edit-form-submitter" class="d-none" type="submit" />

                    <fieldset class="pb-3">
                        <legend>Modifica informazioni</legend>

                        <div class="row g-3">
                            <div class="form-group col-md-12">
                                <label asp-for="Email"></label>
                                <input class="form-control" asp-for="Email" />
                                <span asp-validation-for="Email" class="text-danger"></span>
                            </div>

                            <div class="form-group col-md-6">
                                <label asp-for="FirstName"></label>
                                <input class="form-control" asp-for="FirstName" />
                                <span asp-validation-for="FirstName" class="text-danger"></span>
                            </div>

                            <div class="form-group col-md-6">
                                <label asp-for="LastName"></label>
                                <input class="form-control" asp-for="LastName" />
                                <span asp-validation-for="LastName" class="text-danger"></span>
                            </div>

                            <div class="form-group col-md-6 mx-auto">
                                <label asp-for="NickName"></label>
                                <input class="form-control" asp-for="NickName" />
                                <span asp-validation-for="NickName" class="text-danger"></span>
                            </div>
                        </div>
                    </fieldset>
                </form>
                <div class="text-end">
                    <button type="button" class="btn btn-success ms-2 px-4" onclick="document.getElementById('edit-form-submitter').click()">
                        <i class="fa-solid fa-floppy-disk"></i> <span class="d-none d-sm-inline">Salva</span>
                    </button>
                </div>
            </div>
        </div>
    </div>

    <div class="text-center mt-4">
        <div id="lostConnection" class="d-none text-white">
            <h3>Ho perso la connessione con il server</h3>
            <p><i class="fa fa-circle-o-notch fa-spin"></i> Attendi, sto riprovando a connettermi per te</p>
        </div>
        <div id="lostConnectionManualRetry" class="d-none text-white">
            <h3>Ho perso la connessione con il server e non riesco più a ricollegarmi</h3>
            <p>Prova ad aggiornare la pagina manualmente</p>
            <button class="btn btn-primary" onclick="location.reload(true)">
                <i class="fa fa-refresh"></i> Ricarica la pagina
            </button>
        </div>
    </div>
</div>

@section scripts {
    <script src="/js/bundle-vue.js" asp-append-version="true"></script>
    <script src="~/Areas/Example/Users/Edit.js" asp-append-version="true"></script>
    <script src="~/node_modules/@@microsoft/signalr/dist/browser/signalr.js" asp-append-version="true"></script>
    <script src="~/js/signalRConnectionManager.js" asp-append-version="true"></script>

    <script type="application/json" id="Seed_JSON">
        @Html.Raw(Model.ToJson())
    </script>

    <script>
        var signalRManager = new SignalRConnectionManager("/templateHub", "@Model.Id", "JoinGroup", "LeaveGroup");
        signalRManager.registerEvents();
        signalRManager.startConnection();

        var editModel = new Example.Users.editVueModel(signalRManager.connection, JSON.parse(document.getElementById("Seed_JSON").innerText));

        var vueModel = new Vue({
            el: '#pageId',
            data: editModel,
            computed: {}
        });
    </script>
}
